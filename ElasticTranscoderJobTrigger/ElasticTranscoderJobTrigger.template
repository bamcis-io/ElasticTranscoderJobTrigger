{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Transform"                : "AWS::Serverless-2016-10-31",
    "Description"              : "Automatically transcodes video uploaded to a specified bucket.",


    "Parameters"               : {
        "ElasticTranscoderPipelineArn" : {
            "Description" : "The Arn of the Lambda function used to create Elastic Transcoder Pipelines.",
            "Type"        : "String",
            "Default"     : "arn:aws:lambda:us-east-1:252486826203:function:ElasticTranscoderPipeline",
            "AllowedPattern" : "^arn:aws(?:-us-gov|-cn)?:lambda:.*?:[0-9]{12}:function:.*$"
        },
		"PresetId" : {
			"Description" : "The preset id the elastic transcoder jobs will use. The default is a 480p 16:9 mp4.",
			"Type" : "String",
			"Default": "1351620000001-000020"
		},

		"LogRetentionInDays" : {
            "Type" : "Number",
            "Description" : "The number of days to retain the CloudWatch Logs for the function. If this is set to 0, it will be infinite retention.",
            "MinValue"    : 0,
            "Default"     : 7
        },

        "InputBucket"                  : {
            "Description" : "The bucket where the raw video will be uploaded to.",
            "Type"        : "String",
            "MinLength"   : 3,
            "MaxLength"   : 63,
            "AllowedPattern" : "^[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]$",
			"Default": "mhaken-rawvideo"
        },
        "VideoOutputBucket"            : {
            "Description" : "The bucket where the transcoded videos will be stored.",
            "Type"        : "String",
            "MinLength"   : 3,
            "MaxLength"   : 63,
            "AllowedPattern" : "^[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]$",
			"Default" : "mhaken-video"
        },
        "ThumbnailBucket"              : {
            "Description" : "The bucket where the video thumbnails will be stored.",
            "Type"        : "String",
            "MinLength"   : 3,
            "MaxLength"   : 63,
            "AllowedPattern" : "^[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^[a-z](?:(?:\\.(?!\\.))|-|[a-zA-Z0-9]){1,61}[a-z]$",
			"Default" : "mhaken-thumbnails"
        },

        "PipelineName"                 : {
            "Description" : "The name of the pipeline",
            "Type"        : "String",
            "MinLength"   : 1,
            "MaxLength"   : 40,
			"Default" : "VideoProcessor"
        },

        "NotificationEmail"            : {
            "Description" : "The email address notifications from Elastic Transcoder will be sent to.",
            "Type"        : "String",
            "Default"     : "michael.haken@outlook.com"
        },

        "OrganizationTag"              : {
            "Description" : "The organization this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$",
			"Default" : "bamcis.io"
        },
        "ApplicationTag"               : {
            "Description" : "The application this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$",
			"Default" : "ElasticTranscoderJobTrigger"
        },
        "EnvironmentTag"               : {
            "Description" : "The environment this account is associated with",
            "Type"        : "String",
            "AllowedPattern" : "^\\S{2,}$",
            "ConstraintDescription" : "Member must satisfy regular expression pattern: ^\\S{2,}$",
			"Default" : "dev"
        }
    },


    "Conditions"               : {
        "CreateSNS" : {
            "Fn::Not" : [
                {
                    "Fn::Equals" : [
                        {
                            "Ref" : "NotificationEmail"
                        },
                        ""
                    ]
                }
            ]
        },
		"InfiniteRetention" : {
            "Fn::Equals" : [
                {
                    "Ref" : "LogRetentionInDays"
                },
                0
            ]
        }
    },


    "Resources"                : {
        "VideoInputBucket" : {
            "Type" : "AWS::S3::Bucket",
            "Properties" : {
                "BucketName" : {
                    "Ref" : "InputBucket"
                },
				"NotificationConfiguration" : {
					"TopicConfigurations" : [
						{
						 "Event" : "s3:ObjectCreated:*",
						  "Topic" : {
							"Ref" : "LambdaSNSLauncher"
						  }
						}
					]
				},
                "Tags"       : [
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            },
			"DependsOn" : [
				"LambdaSNSLauncherPolicy"
			]
        },		
        "VideoOutBucket"   : {
            "Type" : "AWS::S3::Bucket",
            "Properties" : {
                "BucketName" : {
                    "Ref" : "VideoOutputBucket"
                },
                "Tags"       : [
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        },
        "ThumbnailOutputBucket" : {
            "Type" : "AWS::S3::Bucket",
            "Properties" : {
                "BucketName" : {
                    "Ref" : "ThumbnailBucket"
                },
                "Tags"       : [
                    {
                        "Key" : "Environment",
                        "Value" : {
                            "Ref" : "EnvironmentTag"
                        }
                    },
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "ApplicationTag"
                        }
                    },
                    {
                        "Key" : "Organization",
                        "Value" : {
                            "Ref" : "OrganizationTag"
                        }
                    }
                ]
            }
        },

        "ElasticTranscoderExecutionRole" : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "RoleName" : "ElasticTranscoderExecutionRole",
                "AssumeRolePolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "sts:AssumeRole"
                            ],
                            "Principal" : {
                                "Service" : [
                                    "elastictranscoder.amazonaws.com"
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "ElasticTranscoderS3Policy"      : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "ElasticTranscoderS3Policy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Sid" : "1",
                            "Effect" : "Allow",
                            "Action" : [
                                "s3:Put*",
                                "s3:ListBucket",
                                "s3:*MultipartUpload*",
                                "s3:Get*"
                            ],
                            "Resource" : [
                                "*"
                            ]
                        },
                        {
                            "Sid" : "2",
                            "Effect" : "Deny",
                            "Action" : [
                                "s3:*Delete*",
                                "s3:*Policy*"
                            ],
                            "Resource" : [
                                "*"
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "ElasticTranscoderExecutionRole"
                    }
                ]
            }
        },
        "ElasticTranscoderSNSPolicy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "ElasticTranscoderSNSPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Sid" : "3",
                            "Effect" : "Allow",
                            "Action" : [
                                "sns:Publish"
                            ],
                            "Resource" : [
								{
									"Ref" : "ElasticTranscoderNotificationTopic"
								}
                            ]
                        },
                        {
                            "Sid" : "4",
                            "Effect" : "Deny",
                            "Action" : [
                                "sns:*Remove*",
                                "sns:*Delete*",
                                "sns:*Permission*"
                            ],
                            "Resource" : [
                                "*"
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "ElasticTranscoderExecutionRole"
                    }
                ]
            }
        },

        "LambdaExecutionRole"            : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "RoleName" : "LambdaElasticTranscoderExecutionRole",
                "AssumeRolePolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "sts:AssumeRole"
                            ],
                            "Principal" : {
                                "Service" : [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "LambdaElasticTranscoderPolicy"  : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaElasticTranscoderPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Sid" : "1",
                            "Effect" : "Allow",
                            "Action" : [
                                "elastictranscoder:CreateJob"
                            ],
                            "Resource" : [
                                {
                                    "Fn::GetAtt" : [
                                        "Pipeline",
                                        "Arn"
                                    ]
                                },
								{
									"Fn::Join" : [
										"",
										[
											"arn:aws:elastictranscoder:",
											{
												"Ref" : "AWS::Region"
											},
											":",
											{
												"Ref" : "AWS::AccountId"
											},
											":preset/*"
										]
									]
								}
                            ]
                        },
						{
                            "Sid" : "2",
                            "Effect" : "Allow",
                            "Action" : [
                                "elastictranscoder:ReadPreset"
                            ],
                            "Resource" : [
                                "*"
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaExecutionRole"
                    }
                ]
            }
        },
		"LambdaCWLPolicy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaCWLPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "logs:CreateLogStream",
                                "logs:CreateLogGroup",
                                "logs:DescribeLogStreams",
                                "logs:PutLogEvents",
                                "logs:DescribeLogGroups"
                            ],
                            "Resource" : {
                                "Fn::Join" : [
                                    "",
                                    [
                                        "arn:aws:logs:*:",
                                        {
                                            "Ref" : "AWS::AccountId"
                                        },
                                        ":*"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaExecutionRole"
                    }
                ]
            }
        },
		"LambdaKMSPolicy"     : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "LambdaKMSPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "kms:Decrypt"
                            ],
                            "Resource" : [
                                "*"
                            ]
                        }
                    ]
                },
                "Roles"          : [
                    {
                        "Ref" : "LambdaExecutionRole"
                    }
                ]
            }
        },


		"CloudWatchLogGroup"  : {
            "Type" : "AWS::Logs::LogGroup",
            "Properties" : {
                "LogGroupName" : "/aws/lambda/ElasticTranscoderJobTrigger",
                "RetentionInDays" : {
                    "Fn::If" : [
                        "InfiniteRetention",
                        {
                            "Ref" : "AWS::NoValue"
                        },
                        {
                            "Ref" : "LogRetentionInDays"
                        }
                    ]
                }
            }
        },

        "ElasticTranscoderNotificationTopic"                       : {
            "Type" : "AWS::SNS::Topic",
            "Condition" : "CreateSNS",
            "Properties" : {
                "DisplayName" : "ElasticTranscoderNotifications",
                "Subscription" : [
                    {
                        "Endpoint" : {
                            "Ref" : "NotificationEmail"
                        },
                        "Protocol" : "email"
                    }
                ],
                "TopicName"    : "ElasticTranscoderNotifications"
            }
        },

		"LambdaSNSLauncher" : {
			"Type" : "AWS::SNS::Topic",
            "Properties" : {
                "DisplayName" : "ElasticTranscoderJobs",
				 "Subscription" : [		
					{
						"Protocol" : "lambda",
						 "Endpoint" : {
							"Fn::Join" : [
								"",
								[
									"arn:aws:lambda:",
									{
										"Ref" : "AWS::Region"
									},
									":",
									{
										"Ref" : "AWS::AccountId"
									},
									":function:",
									"ElasticTranscoderJobTrigger"
								]
							]
						 }
					}
				 ],
                "TopicName"   : "ElasticTranscoderJobs"				
            }
		},
		"LambdaSNSLauncherPolicy": {
			"Type" : "AWS::SNS::TopicPolicy",
			"Properties" : {
				"PolicyDocument" : {
					"Id" : "LambdaSNSLauncherPolicy",
					"Version" : "2012-10-17",
					"Statement" : [
						{
							"Sid" : "1",
							"Effect" : "Allow",
							"Principal" : {
								"Service" : "s3.amazonaws.com"
							},
							"Action" : [
								"sns:Publish"
							],
							"Resource" : [
								"*"
							],
							"Condition" : {
								"ArnLike" : {
									"aws:SourceArn" : {
										"Fn::Join" : [
											"",
											[
												"arn:aws:s3:*:*:",
												{
													"Ref" : "InputBucket"
												}
											]
										]
									}
								}
							}
						}
					]
				},
				"Topics" : [
					{
						"Ref" : "LambdaSNSLauncher"
					}
				]
			}
		},

        "Pipeline"                       : {
            "Type" : "Custom::ElasticTranscoderPipeline",
            "Properties" : {
                "ServiceToken" : {
                    "Ref" : "ElasticTranscoderPipelineArn"
                },
                "Role"         : {
                    "Fn::GetAtt" : [
                        "ElasticTranscoderExecutionRole",
                        "Arn"
                    ]
                },
                "Name"         : {
                    "Ref" : "PipelineName"
                },
                "InputBucket"  : {
                    "Ref" : "VideoInputBucket"
                },
                "Notifications" : {
                    "Error" : {
                        "Ref" : "ElasticTranscoderNotificationTopic"
                    }
                },
                "ContentConfig" : {
                    "Bucket" : {
                        "Ref" : "VideoOutBucket"
                    }
                },
                "ThumbnailConfig" : {
                    "Bucket" : {
                        "Ref" : "ThumbnailOutputBucket"
                    }
                }
            }
        },

		"LambdaFunction"                 : {
            "Type" : "AWS::Serverless::Function",
            "Properties" : {
                "Handler" : "ElasticTranscoderJobTrigger::BAMCIS.LambdaFunctions.ElasticTranscoderJobTrigger.LambdaEntrypoint::PutObject",
                "Runtime" : "dotnetcore2.0",
                "CodeUri" : "",
                "MemorySize" : 256,
                "Timeout"    : 300,
                "Role"       : {
					"Fn::GetAtt" : [ "LambdaExecutionRole", "Arn" ]
				},
                "Policies"   : null,
                "Events"     : {
                    "SendSNS" : {
                        "Type" : "SNS",
                        "Properties" : {
                            "Topic" : {
								"Ref" : "LambdaSNSLauncher"
							}
                        }
                    }
                },
                "Environment" : {
                    "Variables" : {
                        "Pipeline" : {
                            "Fn::GetAtt" : [
                                "Pipeline",
                                "Id"
                            ]
                        },
						"PresetId" : {
							"Ref" : "PresetId"
						}
                    }
                },
				"FunctionName" : "ElasticTranscoderJobTrigger",
                "Tags"        : {
                    "Name" : "ElasticTranscoderJobTrigger",
                    "Environment" : {
                        "Ref" : "EnvironmentTag"
                    },
                    "Application" : {
                        "Ref" : "ApplicationTag"
                    },
                    "Organization" : {
                        "Ref" : "OrganizationTag"
                    }
                }
            }
        }
    },


    "Outputs"                  : {
    }
}